{"version":3,"sources":["../src/dynamic.js"],"names":["watching","checkTableIsDynamic","tableRoot","Error","matches","Selectors","main","region","getFiltersetFromTable","JSON","parse","dataset","tableFilters","refreshTableContent","resetContent","filterset","pendingPromise","Pending","tableComponent","tableHandler","tableUniqueid","sortData","tableSortData","joinType","jointype","filters","firstinitial","tableFirstInitial","lastinitial","tableLastInitial","pageNumber","tablePageNumber","pageSize","tablePageSize","hiddenColumns","tableHiddenColumns","then","data","placeholder","document","createElement","innerHTML","html","replaceWith","childNodes","getTableFromId","dispatchEvent","CustomEvent","Events","tableContentRefreshed","bubbles","resolve","updateTable","sortBy","sortOrder","firstInitial","lastInitial","refreshContent","tableConfigChanged","unshift","sortby","sortorder","parseInt","stringify","filterJson","columnJson","Promise","getTableData","setFilters","getFilters","setSortOrder","setPageNumber","getPageNumber","setPageSize","getPageSize","setFirstInitial","getFirstInitial","setLastInitial","getLastInitial","hideColumn","columnToHide","push","showColumn","columnToShow","filter","columnName","resetTablePreferences","init","addEventListener","e","target","closest","sortableLink","table","links","sortableColumn","preventDefault","catch","Notification","exception","firstInitialLink","initialsBar","initial","lastInitialLink","pageItem","paginationBar","hide","column","show","resetTablePreferencesLink","tableRegionId","querySelector","fromRegionId"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to handle dynamic table features.\n *\n * @module     core_table/dynamic\n * @package    core_table\n * @copyright  2020 Simey Lameze <simey@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as Selectors from 'core_table/local/dynamic/selectors';\nimport Events from './local/dynamic/events';\nimport Pending from 'core/pending';\nimport {addIconToContainer} from 'core/loadingicon';\nimport {fetch as fetchTableData} from 'core_table/local/dynamic/repository';\nimport Notification from 'core/notification';\n\nlet watching = false;\n\n/**\n * Ensure that a table is a dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Bool}\n */\nconst checkTableIsDynamic = tableRoot => {\n    if (!tableRoot) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    if (!tableRoot.matches(Selectors.main.region)) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    return true;\n};\n\n/**\n * Get the filterset data from a known dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Object}\n */\nconst getFiltersetFromTable = tableRoot => {\n    return JSON.parse(tableRoot.dataset.tableFilters);\n};\n\n/**\n * Update the specified table based on its current values.\n *\n * @param {HTMLElement} tableRoot\n * @param {Bool} resetContent\n * @returns {Promise}\n */\nexport const refreshTableContent = (tableRoot, resetContent = false) => {\n    const filterset = getFiltersetFromTable(tableRoot);\n    addIconToContainer(tableRoot);\n\n    const pendingPromise = new Pending('core_table/dynamic:refreshTableContent');\n\n    return fetchTableData(\n        tableRoot.dataset.tableComponent,\n        tableRoot.dataset.tableHandler,\n        tableRoot.dataset.tableUniqueid,\n        {\n            sortData: JSON.parse(tableRoot.dataset.tableSortData),\n            joinType: filterset.jointype,\n            filters: filterset.filters,\n            firstinitial: tableRoot.dataset.tableFirstInitial,\n            lastinitial: tableRoot.dataset.tableLastInitial,\n            pageNumber: tableRoot.dataset.tablePageNumber,\n            pageSize: tableRoot.dataset.tablePageSize,\n            hiddenColumns: JSON.parse(tableRoot.dataset.tableHiddenColumns),\n        },\n        resetContent,\n    )\n    .then(data => {\n        const placeholder = document.createElement('div');\n        placeholder.innerHTML = data.html;\n        tableRoot.replaceWith(...placeholder.childNodes);\n\n        // Update the tableRoot.\n        return getTableFromId(tableRoot.dataset.tableUniqueid);\n    }).then(tableRoot => {\n        tableRoot.dispatchEvent(new CustomEvent(Events.tableContentRefreshed, {\n            bubbles: true,\n        }));\n\n        return tableRoot;\n    })\n    .then(tableRoot => {\n        pendingPromise.resolve();\n\n        return tableRoot;\n    });\n};\n\nexport const updateTable = (tableRoot, {\n    sortBy = null,\n    sortOrder = null,\n    filters = null,\n    firstInitial = null,\n    lastInitial = null,\n    pageNumber = null,\n    pageSize = null,\n    hiddenColumns = null,\n} = {}, refreshContent = true) => {\n    checkTableIsDynamic(tableRoot);\n\n    const pendingPromise = new Pending('core_table/dynamic:updateTable');\n    let tableConfigChanged = false;\n\n    // Update sort fields.\n    if (sortBy && sortOrder) {\n        // Always update the table if requested and there were sort fields.\n        // These fields are only ever normalised in the backend.\n        tableConfigChanged = true;\n\n        const sortData = JSON.parse(tableRoot.dataset.tableSortData);\n        sortData.unshift({\n            sortby: sortBy,\n            sortorder: parseInt(sortOrder, 10),\n        });\n        tableRoot.dataset.tableSortData = JSON.stringify(sortData);\n    }\n\n    // Update initials.\n    if (firstInitial !== null) {\n        if (tableRoot.dataset.tableFirstInitial !== firstInitial) {\n            tableConfigChanged = true;\n        }\n\n        tableRoot.dataset.tableFirstInitial = firstInitial;\n    }\n\n    if (lastInitial !== null) {\n        if (tableRoot.dataset.tableLastInitial !== lastInitial) {\n            tableConfigChanged = true;\n        }\n\n        tableRoot.dataset.tableLastInitial = lastInitial;\n    }\n\n    if (pageSize !== null) {\n        if (tableRoot.dataset.tablePageSize != pageSize) {\n            tableConfigChanged = true;\n        }\n\n        tableRoot.dataset.tablePageSize = pageSize;\n    }\n\n    // Update filters.\n    if (filters) {\n        const filterJson = JSON.stringify(filters);\n\n        if (tableRoot.dataset.tableFilters !== filterJson) {\n            tableConfigChanged = true;\n        }\n\n        tableRoot.dataset.tableFilters = filterJson;\n    }\n\n    // Reset to page 1 when table content is being altered by filtering or sorting.\n    // This ensures the table page being loaded always exists, and gives a consistent experience.\n    if (tableConfigChanged) {\n        pageNumber = 1;\n    }\n\n    // Update hidden columns.\n    if (hiddenColumns) {\n        const columnJson = JSON.stringify(hiddenColumns);\n\n        if (tableRoot.dataset.tableHiddenColumns !== columnJson) {\n            tableConfigChanged = true;\n        }\n\n        tableRoot.dataset.tableHiddenColumns = columnJson;\n    }\n\n    if (pageNumber !== null) {\n        if (tableRoot.dataset.tablePageNumber != pageNumber) {\n            tableConfigChanged = true;\n        }\n\n        tableRoot.dataset.tablePageNumber = pageNumber;\n    }\n\n    // Refresh.\n    if (refreshContent && tableConfigChanged) {\n        return refreshTableContent(tableRoot)\n        .then(tableRoot => {\n            pendingPromise.resolve();\n            return tableRoot;\n        });\n    } else {\n        pendingPromise.resolve();\n        return Promise.resolve(tableRoot);\n    }\n};\n\n/**\n * Get the table dataset for the specified tableRoot, ensuring that the provided table is a dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {DOMStringMap}\n */\nconst getTableData = tableRoot => {\n    checkTableIsDynamic(tableRoot);\n\n    return tableRoot.dataset;\n};\n\n/**\n * Update the specified table using the new filters.\n *\n * @param {HTMLElement} tableRoot\n * @param {Object} filters\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setFilters = (tableRoot, filters, refreshContent = true) =>\n    updateTable(tableRoot, {filters}, refreshContent);\n\n/**\n * Get the filter data for the specified table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Object}\n */\nexport const getFilters = tableRoot => {\n    checkTableIsDynamic(tableRoot);\n\n    return getFiltersetFromTable(tableRoot);\n};\n\n/**\n * Update the sort order.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} sortBy\n * @param {Number} sortOrder\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setSortOrder = (tableRoot, sortBy, sortOrder, refreshContent = true) =>\n    updateTable(tableRoot, {sortBy, sortOrder}, refreshContent);\n\n/**\n * Set the page number.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} pageNumber\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setPageNumber = (tableRoot, pageNumber, refreshContent = true) =>\n    updateTable(tableRoot, {pageNumber}, refreshContent);\n\n/**\n * Get the current page number.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Number}\n */\nexport const getPageNumber = tableRoot => getTableData(tableRoot).tablePageNumber;\n\n/**\n * Set the page size.\n *\n * @param {HTMLElement} tableRoot\n * @param {Number} pageSize\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setPageSize = (tableRoot, pageSize, refreshContent = true) =>\n    updateTable(tableRoot, {pageSize, pageNumber: 1}, refreshContent);\n\n/**\n * Get the current page size.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Number}\n */\nexport const getPageSize = tableRoot => getTableData(tableRoot).tablePageSize;\n\n/**\n * Update the first initial to show.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} firstInitial\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setFirstInitial = (tableRoot, firstInitial, refreshContent = true) =>\n    updateTable(tableRoot, {firstInitial}, refreshContent);\n\n/**\n * Get the current first initial filter.\n *\n * @param {HTMLElement} tableRoot\n * @returns {String}\n */\nexport const getFirstInitial = tableRoot => getTableData(tableRoot).tableFirstInitial;\n\n/**\n * Update the last initial to show.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} lastInitial\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setLastInitial = (tableRoot, lastInitial, refreshContent = true) =>\n    updateTable(tableRoot, {lastInitial}, refreshContent);\n\n/**\n * Get the current last initial filter.\n *\n * @param {HTMLElement} tableRoot\n * @returns {String}\n */\nexport const getLastInitial = tableRoot => getTableData(tableRoot).tableLastInitial;\n\n/**\n * Hide a column in the participants table.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} columnToHide\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const hideColumn = (tableRoot, columnToHide, refreshContent = true) => {\n    const hiddenColumns = JSON.parse(tableRoot.dataset.tableHiddenColumns);\n    hiddenColumns.push(columnToHide);\n\n    return updateTable(tableRoot, {hiddenColumns}, refreshContent);\n};\n\n/**\n * Make a hidden column visible in the participants table.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} columnToShow\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const showColumn = (tableRoot, columnToShow, refreshContent = true) => {\n    let hiddenColumns = JSON.parse(tableRoot.dataset.tableHiddenColumns);\n    hiddenColumns = hiddenColumns.filter(columnName => columnName !== columnToShow);\n\n    return updateTable(tableRoot, {hiddenColumns}, refreshContent);\n};\n\n/**\n * Reset table preferences.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Promise}\n */\nconst resetTablePreferences = tableRoot => refreshTableContent(tableRoot, true);\n\n/**\n * Set up listeners to handle table updates.\n */\nexport const init = () => {\n    if (watching) {\n        // Already watching.\n        return;\n    }\n    watching = true;\n\n    document.addEventListener('click', e => {\n        const tableRoot = e.target.closest(Selectors.main.region);\n\n        if (!tableRoot) {\n            return;\n        }\n\n        const sortableLink = e.target.closest(Selectors.table.links.sortableColumn);\n        if (sortableLink) {\n            e.preventDefault();\n\n            setSortOrder(tableRoot, sortableLink.dataset.sortby, sortableLink.dataset.sortorder)\n            .catch(Notification.exception);\n        }\n\n        const firstInitialLink = e.target.closest(Selectors.initialsBar.links.firstInitial);\n        if (firstInitialLink !== null) {\n            e.preventDefault();\n\n            setFirstInitial(tableRoot, firstInitialLink.dataset.initial).catch(Notification.exception);\n        }\n\n        const lastInitialLink = e.target.closest(Selectors.initialsBar.links.lastInitial);\n        if (lastInitialLink !== null) {\n            e.preventDefault();\n\n            setLastInitial(tableRoot, lastInitialLink.dataset.initial).catch(Notification.exception);\n        }\n\n        const pageItem = e.target.closest(Selectors.paginationBar.links.pageItem);\n        if (pageItem) {\n            e.preventDefault();\n\n            setPageNumber(tableRoot, pageItem.dataset.pageNumber).catch(Notification.exception);\n        }\n\n        const hide = e.target.closest(Selectors.table.links.hide);\n        if (hide) {\n            e.preventDefault();\n\n            hideColumn(tableRoot, hide.dataset.column).catch(Notification.exception);\n        }\n\n        const show = e.target.closest(Selectors.table.links.show);\n        if (show) {\n            e.preventDefault();\n\n            showColumn(tableRoot, show.dataset.column).catch(Notification.exception);\n        }\n\n        const resetTablePreferencesLink = e.target.closest('.resettable a');\n        if (resetTablePreferencesLink) {\n            e.preventDefault();\n\n            resetTablePreferences(tableRoot).catch(Notification.exception);\n        }\n    });\n};\n\n/**\n * Fetch the table via its table region id.\n *\n * @param {String} tableRegionId\n * @returns {HTMLElement}\n */\nexport const getTableFromId = tableRegionId => {\n    const tableRoot = document.querySelector(Selectors.main.fromRegionId(tableRegionId));\n\n\n    if (!tableRoot) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    return tableRoot;\n};\n\nexport {\n    Events\n};\n"],"file":"dynamic.min.js"}