{"version":3,"sources":["../src/form-cohort-selector.js"],"names":["define","ajax","$","processResults","selector","data","results","i","excludelist","split","cohorts","length","indexOf","id","push","value","label","name","transport","query","success","failure","el","promises","contextid","searchargs","includes","limitfrom","limitnum","context","call","methodname","args","when","apply","done","fail"],"mappings":"AAyBAA,OAAM,6BAAC,CAAC,WAAD,CAAc,QAAd,CAAD,CAA0B,SAASC,CAAT,CAAeC,CAAf,CAAkB,CAE9C,MAAsD,CAElDC,cAAc,CAAE,wBAASC,CAAT,CAAmBC,CAAnB,CAAyB,IAEjCC,CAAAA,CAAO,CAAG,EAFuB,CAGjCC,CAAC,CAAG,CAH6B,CAIjCC,CAAW,CAAG,CAAON,CAAC,CAACE,CAAD,CAAD,CAAYC,IAAZ,CAAiB,SAAjB,CAAP,KAAoCI,KAApC,CAA0C,GAA1C,CAJmB,CAMrC,IAAKF,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGF,CAAI,CAACK,OAAL,CAAaC,MAA7B,CAAqCJ,CAAC,EAAtC,CAA0C,CACtC,GAAwD,CAAC,CAArD,GAAAC,CAAW,CAACI,OAAZ,CAA2BP,CAAI,CAACK,OAAL,CAAaH,CAAb,EAAgBM,EAA3C,IAAJ,CAA4D,CACxDP,CAAO,CAACQ,IAAR,CAAa,CAACC,KAAK,CAAEV,CAAI,CAACK,OAAL,CAAaH,CAAb,EAAgBM,EAAxB,CAA4BG,KAAK,CAAEX,CAAI,CAACK,OAAL,CAAaH,CAAb,EAAgBU,IAAnD,CAAb,CACH,CACJ,CACD,MAAOX,CAAAA,CACV,CAdiD,CAgBlDY,SAAS,CAAE,mBAASd,CAAT,CAAmBe,CAAnB,CAA0BC,CAA1B,CAAmCC,CAAnC,CAA4C,IAC/CC,CAAAA,CAAE,CAAGpB,CAAC,CAACE,CAAD,CADyC,CAM/CmB,CAAQ,CAAG,IANoC,CAQnD,GAAqB,WAAjB,QAAOJ,CAAAA,CAAX,CAAkC,CAC9BA,CAAK,CAAG,EACX,CAVkD,GAW/CK,CAAAA,CAAS,CAAGF,CAAE,CAACjB,IAAH,CAAQ,WAAR,CAXmC,CAa/CoB,CAAU,CAAG,CACbN,KAAK,CAAEA,CADM,CAEbO,QAAQ,CAAE,SAFG,CAGbC,SAAS,CAAE,CAHE,CAIbC,QAAQ,CAAE,GAJG,CAKbC,OAAO,CAAE,CAACL,SAAS,CAAEA,CAAZ,CALI,CAbkC,CA0BnDD,CAAQ,CAAGtB,CAAI,CAAC6B,IAAL,CALC,CAAC,CACTC,UAAU,CAAE,4BADH,CACiCC,IAAI,CAAEP,CADvC,CAAD,CAKD,CAAX,CACAvB,CAAC,CAAC+B,IAAF,CAAOC,KAAP,CAAahC,CAAC,CAAC+B,IAAf,CAAqBV,CAArB,EAA+BY,IAA/B,CAAoC,SAAS9B,CAAT,CAAe,CAC/Ce,CAAO,CAACf,CAAD,CACV,CAFD,EAEG+B,IAFH,CAEQf,CAFR,CAGH,CA9CiD,CAgDzD,CAlDK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course selector adaptor for auto-complete form element.\n *\n * @module     core/form-cohort-selector\n * @class      form-cohort-selector\n * @package    core\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['core/ajax', 'jquery'], function(ajax, $) {\n\n    return /** @alias module:core/form-cohort-selector */ {\n        // Public variables and functions.\n        processResults: function(selector, data) {\n            // Mangle the results into an array of objects.\n            var results = [];\n            var i = 0;\n            var excludelist = String($(selector).data('exclude')).split(',');\n\n            for (i = 0; i < data.cohorts.length; i++) {\n                if (excludelist.indexOf(String(data.cohorts[i].id)) === -1) {\n                    results.push({value: data.cohorts[i].id, label: data.cohorts[i].name});\n                }\n            }\n            return results;\n        },\n\n        transport: function(selector, query, success, failure) {\n            var el = $(selector);\n\n            // Parse some data-attributes from the form element.\n\n            // Build the query.\n            var promises = null;\n\n            if (typeof query === \"undefined\") {\n                query = '';\n            }\n            var contextid = el.data('contextid');\n\n            var searchargs = {\n                query: query,\n                includes: 'parents',\n                limitfrom: 0,\n                limitnum: 100,\n                context: {contextid: contextid}\n            };\n\n            var calls = [{\n                methodname: 'core_cohort_search_cohorts', args: searchargs\n            }];\n\n            // Go go go!\n            promises = ajax.call(calls);\n            $.when.apply($.when, promises).done(function(data) {\n                success(data);\n            }).fail(failure);\n        }\n    };\n});\n"],"file":"form-cohort-selector.min.js"}