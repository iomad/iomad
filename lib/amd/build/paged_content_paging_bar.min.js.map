{"version":3,"sources":["../src/paged_content_paging_bar.js"],"names":["define","$","CustomEvents","PagedContentEvents","Str","PubSub","SELECTORS","ROOT","PAGE","PAGE_ITEM","PAGE_LINK","FIRST_BUTTON","LAST_BUTTON","NEXT_BUTTON","PREVIOUS_BUTTON","DOTS_BUTTONS","BEGINNING_DOTS_BUTTON","ENDING_DOTS_BUTTON","getPageByNumber","root","pageNumber","find","getNextButton","setLastPageNumber","number","attr","getLastPageNumber","parseInt","getActivePageNumber","setActivePageNumber","hasActivePageNumber","isNaN","getPageNumber","page","activePageNumber","lastPage","getLimit","setLimit","limit","show","removeClass","hide","addClass","disableNextControlButtons","nextButton","lastButton","enableNextControlButtons","removeAttr","disablePreviousControlButtons","previousButton","firstButton","adjustPagingBarSize","lastPageNumber","dotsButtons","beginningDotsButton","endingDotsButton","pages","barSize","minpage","Math","max","round","maxpage","each","index","enablePreviousControlButtons","getPageAriaLabelComponents","componentString","components","split","map","component","trim","getActivePageAriaLabelComponents","generatePageNumbers","items","item","hasClass","generateAriaLabels","pageAriaLabelComponents","activePageAriaLabelComponents","pageItems","stringRequests","key","param","get_strings","then","strings","string","catch","showPage","id","isSamePage","publish","SHOW_PAGES","offset","registerEventListeners","ignoreControlWhileLoading","loading","events","activate","on","e","data","originalEvent","preventDefault","stopPropagation","target","closest","subscribe","ALL_ITEMS_LOADED","currentLastPage","PAGES_SHOWN","SET_ITEMS_PER_PAGE_LIMIT","init","click","rootSelector"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to enhance the paged content paging bar.\n *\n * @module     core/paging_bar\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/custom_interaction_events',\n    'core/paged_content_events',\n    'core/str',\n    'core/pubsub'\n],\nfunction(\n    $,\n    CustomEvents,\n    PagedContentEvents,\n    Str,\n    PubSub\n) {\n\n    var SELECTORS = {\n        ROOT: '[data-region=\"paging-bar\"]',\n        PAGE: '[data-page]',\n        PAGE_ITEM: '[data-region=\"page-item\"]',\n        PAGE_LINK: '[data-region=\"page-link\"]',\n        FIRST_BUTTON: '[data-control=\"first\"]',\n        LAST_BUTTON: '[data-control=\"last\"]',\n        NEXT_BUTTON: '[data-control=\"next\"]',\n        PREVIOUS_BUTTON: '[data-control=\"previous\"]',\n        DOTS_BUTTONS: '[data-dots]',\n        BEGINNING_DOTS_BUTTON: '[data-dots=\"beginning\"]',\n        ENDING_DOTS_BUTTON: '[data-dots=\"ending\"]',\n    };\n\n    /**\n     * Get the page element by number.\n     *\n     * @param {object} root The root element.\n     * @param {Number} pageNumber The page number.\n     * @return {jQuery}\n     */\n    var getPageByNumber = function(root, pageNumber) {\n        return root.find(SELECTORS.PAGE_ITEM + '[data-page-number=\"' + pageNumber + '\"]');\n    };\n\n    /**\n     * Get the next button element.\n     *\n     * @param {object} root The root element.\n     * @return {jQuery}\n     */\n    var getNextButton = function(root) {\n        return root.find(SELECTORS.NEXT_BUTTON);\n    };\n\n    /**\n     * Set the last page number after which no more pages\n     * should be loaded.\n     *\n     * @param {object} root The root element.\n     * @param {Number} number Page number.\n     */\n    var setLastPageNumber = function(root, number) {\n        root.attr('data-last-page-number', number);\n    };\n\n    /**\n     * Get the last page number.\n     *\n     * @param {object} root The root element.\n     * @return {Number}\n     */\n    var getLastPageNumber = function(root) {\n        return parseInt(root.attr('data-last-page-number'), 10);\n    };\n\n    /**\n     * Get the active page number.\n     *\n     * @param {object} root The root element.\n     * @returns {Number} The page number\n     */\n    var getActivePageNumber = function(root) {\n        return parseInt(root.attr('data-active-page-number'), 10);\n    };\n\n    /**\n     * Set the active page number.\n     *\n     * @param {object} root The root element.\n     * @param {Number} number Page number.\n     */\n    var setActivePageNumber = function(root, number) {\n        root.attr('data-active-page-number', number);\n    };\n\n    /**\n     * Check if there is an active page number.\n     *\n     * @param {object} root The root element.\n     * @returns {bool}\n     */\n    var hasActivePageNumber = function(root) {\n        var number = getActivePageNumber(root);\n        return !isNaN(number) && number != 0;\n    };\n\n    /**\n     * Get the page number for a given page.\n     *\n     * @param {object} root The root element.\n     * @param {object} page The page element.\n     * @returns {Number} The page number\n     */\n    var getPageNumber = function(root, page) {\n        if (page.attr('data-page') != undefined) {\n            // If it's an actual page then we can just use the page number\n            // attribute.\n            return parseInt(page.attr('data-page-number'), 10);\n        }\n\n        var pageNumber = 1;\n        var activePageNumber = null;\n\n        switch (page.attr('data-control')) {\n            case 'first':\n                pageNumber = 1;\n                break;\n\n            case 'last':\n                pageNumber = getLastPageNumber(root);\n                break;\n\n            case 'next':\n                activePageNumber = getActivePageNumber(root);\n                var lastPage = getLastPageNumber(root);\n                if (!lastPage) {\n                    pageNumber = activePageNumber + 1;\n                } else if (activePageNumber && activePageNumber < lastPage) {\n                    pageNumber = activePageNumber + 1;\n                } else {\n                    pageNumber = lastPage;\n                }\n                break;\n\n            case 'previous':\n                activePageNumber = getActivePageNumber(root);\n                if (activePageNumber && activePageNumber > 1) {\n                    pageNumber = activePageNumber - 1;\n                } else {\n                    pageNumber = 1;\n                }\n                break;\n\n            default:\n                pageNumber = 1;\n                break;\n        }\n\n        // Make sure we return an int not a string.\n        return parseInt(pageNumber, 10);\n    };\n\n    /**\n     * Get the limit of items for each page.\n     *\n     * @param {object} root The root element.\n     * @returns {Number}\n     */\n    var getLimit = function(root) {\n        return parseInt(root.attr('data-items-per-page'), 10);\n    };\n\n    /**\n     * Set the limit of items for each page.\n     *\n     * @param {object} root The root element.\n     * @param {Number} limit Items per page limit.\n     */\n    var setLimit = function(root, limit) {\n        root.attr('data-items-per-page', limit);\n    };\n\n    /**\n     * Show the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var show = function(root) {\n        root.removeClass('hidden');\n    };\n\n    /**\n     * Hide the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var hide = function(root) {\n        root.addClass('hidden');\n    };\n\n    /**\n     * Disable the next and last buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var disableNextControlButtons = function(root) {\n        var nextButton = root.find(SELECTORS.NEXT_BUTTON);\n        var lastButton = root.find(SELECTORS.LAST_BUTTON);\n\n        nextButton.addClass('disabled');\n        nextButton.attr('aria-disabled', true);\n        lastButton.addClass('disabled');\n        lastButton.attr('aria-disabled', true);\n    };\n\n    /**\n     * Enable the next and last buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var enableNextControlButtons = function(root) {\n        var nextButton = root.find(SELECTORS.NEXT_BUTTON);\n        var lastButton = root.find(SELECTORS.LAST_BUTTON);\n\n        nextButton.removeClass('disabled');\n        nextButton.removeAttr('aria-disabled');\n        lastButton.removeClass('disabled');\n        lastButton.removeAttr('aria-disabled');\n    };\n\n    /**\n     * Disable the previous and first buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var disablePreviousControlButtons = function(root) {\n        var previousButton = root.find(SELECTORS.PREVIOUS_BUTTON);\n        var firstButton = root.find(SELECTORS.FIRST_BUTTON);\n\n        previousButton.addClass('disabled');\n        previousButton.attr('aria-disabled', true);\n        firstButton.addClass('disabled');\n        firstButton.attr('aria-disabled', true);\n    };\n\n    /**\n     * Adjusts the size of the paging bar and hides unnecessary pages.\n     *\n     * @param {object} root The root element.\n     */\n    var adjustPagingBarSize = function(root) {\n        var activePageNumber = getActivePageNumber(root);\n        var lastPageNumber = getLastPageNumber(root);\n\n        var dotsButtons = root.find(SELECTORS.DOTS_BUTTONS);\n        var beginningDotsButton = root.find(SELECTORS.BEGINNING_DOTS_BUTTON);\n        var endingDotsButton = root.find(SELECTORS.ENDING_DOTS_BUTTON);\n\n        var pages = root.find(SELECTORS.PAGE);\n        var barSize = parseInt(root.attr('data-bar-size'), 10);\n\n        if (barSize && lastPageNumber > barSize) {\n\n            var minpage = Math.max(activePageNumber - Math.round(barSize / 2), 1);\n            var maxpage = minpage + barSize - 1;\n\n            if (maxpage >= lastPageNumber) {\n                maxpage = lastPageNumber;\n                minpage = maxpage - barSize + 1;\n            }\n\n            if (minpage > 1) {\n                show(beginningDotsButton);\n                minpage++;\n            } else {\n                hide(beginningDotsButton);\n            }\n            if (maxpage < lastPageNumber) {\n                show(endingDotsButton);\n                maxpage--;\n            } else {\n                hide(endingDotsButton);\n            }\n            dotsButtons.addClass('disabled');\n            dotsButtons.attr('aria-disabled', true);\n\n            hide(pages);\n\n            pages.each(function(index, page) {\n                page = $(page);\n                if ((index + 1) >= minpage && (index + 1) <= maxpage) {\n                    show(page);\n                }\n            });\n\n        } else {\n            hide(dotsButtons);\n        }\n    };\n\n    /**\n     * Enable the previous and first buttons in the paging bar.\n     *\n     * @param {object} root The root element.\n     */\n    var enablePreviousControlButtons = function(root) {\n        var previousButton = root.find(SELECTORS.PREVIOUS_BUTTON);\n        var firstButton = root.find(SELECTORS.FIRST_BUTTON);\n\n        previousButton.removeClass('disabled');\n        previousButton.removeAttr('aria-disabled');\n        firstButton.removeClass('disabled');\n        firstButton.removeAttr('aria-disabled');\n    };\n\n    /**\n     * Get the components for a get_string request for the aria-label\n     * on a page. The value is a comma separated string of key and\n     * component.\n     *\n     * @param {object} root The root element.\n     * @return {array} First element is the key, second is the component.\n     */\n    var getPageAriaLabelComponents = function(root) {\n        var componentString = root.attr('data-aria-label-components-pagination-item');\n        var components = componentString.split(',').map(function(component) {\n            return component.trim();\n        });\n        return components;\n    };\n\n    /**\n     * Get the components for a get_string request for the aria-label\n     * on an active page. The value is a comma separated string of key and\n     * component.\n     *\n     * @param {object} root The root element.\n     * @return {array} First element is the key, second is the component.\n     */\n    var getActivePageAriaLabelComponents = function(root) {\n        var componentString = root.attr('data-aria-label-components-pagination-active-item');\n        var components = componentString.split(',').map(function(component) {\n            return component.trim();\n        });\n        return components;\n    };\n\n    /**\n     * Set page numbers on each of the given items. Page numbers are set\n     * from 1..n (where n is the number of items).\n     *\n     * Sets the active page number to be the last page found with\n     * an \"active\" class (if any).\n     *\n     * Sets the last page number.\n     *\n     * @param {object} root The root element.\n     * @param {jQuery} items A jQuery list of items.\n     */\n    var generatePageNumbers = function(root, items) {\n        var lastPageNumber = 0;\n        setActivePageNumber(root, 0);\n\n        items.each(function(index, item) {\n            var pageNumber = index + 1;\n            item = $(item);\n            item.attr('data-page-number', pageNumber);\n            lastPageNumber++;\n\n            if (item.hasClass('active')) {\n                setActivePageNumber(root, pageNumber);\n            }\n        });\n\n        setLastPageNumber(root, lastPageNumber);\n    };\n\n    /**\n     * Set the aria-labels on each of the page items in the paging bar.\n     * This includes the next, previous, first, and last items.\n     *\n     * @param {object} root The root element.\n     */\n    var generateAriaLabels = function(root) {\n        var pageAriaLabelComponents = getPageAriaLabelComponents(root);\n        var activePageAriaLabelComponents = getActivePageAriaLabelComponents(root);\n        var activePageNumber = getActivePageNumber(root);\n        var pageItems = root.find(SELECTORS.PAGE_ITEM);\n        // We want to request all of the strings at once rather than\n        // one at a time.\n        var stringRequests = pageItems.map(function(index, page) {\n            page = $(page);\n            var pageNumber = getPageNumber(root, page);\n\n            if (pageNumber === activePageNumber) {\n                return {\n                    key: activePageAriaLabelComponents[0],\n                    component: activePageAriaLabelComponents[1],\n                    param: pageNumber\n                };\n            } else {\n                return {\n                    key: pageAriaLabelComponents[0],\n                    component: pageAriaLabelComponents[1],\n                    param: pageNumber\n                };\n            }\n        });\n\n        Str.get_strings(stringRequests).then(function(strings) {\n            pageItems.each(function(index, page) {\n                page = $(page);\n                var string = strings[index];\n                page.attr('aria-label', string);\n                page.find(SELECTORS.PAGE_LINK).attr('aria-label', string);\n            });\n\n            return strings;\n        })\n        .catch(function() {\n            // No need to interrupt the page if we can't load the aria lang strings.\n            return;\n        });\n    };\n\n    /**\n     * Make the paging bar item for the given page number visible and fire\n     * the SHOW_PAGES paged content event to tell any listening content to\n     * update.\n     *\n     * @param {object} root The root element.\n     * @param {Number} pageNumber The number for the page to show.\n     * @param {string} id A uniqie id for this instance.\n     */\n    var showPage = function(root, pageNumber, id) {\n        var lastPageNumber = getLastPageNumber(root);\n        var isSamePage = pageNumber == getActivePageNumber(root);\n        var limit = getLimit(root);\n        var offset = (pageNumber - 1) * limit;\n\n        if (!isSamePage) {\n            // We only need to toggle the active class if the user didn't click\n            // on the already active page.\n            root.find(SELECTORS.PAGE_ITEM).removeClass('active').removeAttr('aria-current');\n            var page = getPageByNumber(root, pageNumber);\n            page.addClass('active');\n            page.attr('aria-current', true);\n            setActivePageNumber(root, pageNumber);\n\n            adjustPagingBarSize(root);\n        }\n\n        // Make sure the control buttons are disabled as the user navigates\n        // to either end of the limits.\n        if (lastPageNumber && pageNumber >= lastPageNumber) {\n            disableNextControlButtons(root);\n        } else {\n            enableNextControlButtons(root);\n        }\n\n        if (pageNumber > 1) {\n            enablePreviousControlButtons(root);\n        } else {\n            disablePreviousControlButtons(root);\n        }\n\n        generateAriaLabels(root);\n\n        // This event requires a payload that contains a list of all pages that\n        // were activated. In the case of the paging bar we only show one page at\n        // a time.\n        PubSub.publish(id + PagedContentEvents.SHOW_PAGES, [{\n            pageNumber: pageNumber,\n            limit: limit,\n            offset: offset\n        }]);\n    };\n\n    /**\n     * Add event listeners for interactions with the paging bar as well as listening\n     * for custom paged content events.\n     *\n     * Each event will trigger different logic to update parts of the paging bar's\n     * display.\n     *\n     * @param {object} root The root element.\n     * @param {string} id A uniqie id for this instance.\n     */\n    var registerEventListeners = function(root, id) {\n        var ignoreControlWhileLoading = root.attr('data-ignore-control-while-loading');\n        var loading = false;\n\n        if (ignoreControlWhileLoading == \"\") {\n            // Default to ignoring control while loading if not specified.\n            ignoreControlWhileLoading = true;\n        }\n\n        CustomEvents.define(root, [\n            CustomEvents.events.activate\n        ]);\n\n        root.on(CustomEvents.events.activate, SELECTORS.PAGE_ITEM, function(e, data) {\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n\n            if (ignoreControlWhileLoading && loading) {\n                // Do nothing if configured to ignore control while loading.\n                return;\n            }\n\n            var page = $(e.target).closest(SELECTORS.PAGE_ITEM);\n\n            if (!page.hasClass('disabled')) {\n                var pageNumber = getPageNumber(root, page);\n                showPage(root, pageNumber, id);\n                loading = true;\n            }\n        });\n\n        // This event is fired when all of the items have been loaded. Typically used\n        // in an \"infinite\" pages context when we don't know the exact number of pages\n        // ahead of time.\n        PubSub.subscribe(id + PagedContentEvents.ALL_ITEMS_LOADED, function(pageNumber) {\n            loading = false;\n            var currentLastPage = getLastPageNumber(root);\n\n            if (!currentLastPage || pageNumber < currentLastPage) {\n                // Somehow the value we've got saved is higher than the new\n                // value we just received. Perhaps events came out of order.\n                // In any case, save the lowest value.\n                setLastPageNumber(root, pageNumber);\n            }\n\n            if (pageNumber === 1 && root.attr('data-hide-control-on-single-page')) {\n                // If all items were loaded on the first page then we can hide\n                // the paging bar because there are no other pages to load.\n                hide(root);\n                disableNextControlButtons(root);\n                disablePreviousControlButtons(root);\n            } else {\n                show(root);\n                disableNextControlButtons(root);\n            }\n        });\n\n        // This event is fired after all of the requested pages have been rendered.\n        PubSub.subscribe(id + PagedContentEvents.PAGES_SHOWN, function() {\n            // All pages have been shown so turn off the loading flag.\n            loading = false;\n        });\n\n        // This is triggered when the paging limit is modified.\n        PubSub.subscribe(id + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT, function(limit) {\n            // Update the limit.\n            setLimit(root, limit);\n            setLastPageNumber(root, 0);\n            setActivePageNumber(root, 0);\n            show(root);\n            // Reload the data from page 1 again.\n            showPage(root, 1, id);\n        });\n    };\n\n    /**\n     * Initialise the paging bar.\n     * @param {object} root The root element.\n     * @param {string} id A uniqie id for this instance.\n     */\n    var init = function(root, id) {\n        root = $(root);\n        var pages = root.find(SELECTORS.PAGE);\n        generatePageNumbers(root, pages);\n        registerEventListeners(root, id);\n\n        if (hasActivePageNumber(root)) {\n            var activePageNumber = getActivePageNumber(root);\n            // If the the paging bar was rendered with an active page selected\n            // then make sure we fired off the event to tell the content page to\n            // show.\n            getPageByNumber(root, activePageNumber).click();\n            if (activePageNumber == 1) {\n                // If the first page is active then disable the previous buttons.\n                disablePreviousControlButtons(root);\n            }\n        } else {\n            // There was no active page number so load the first page using\n            // the next button. This allows the infinite pagination to work.\n            getNextButton(root).click();\n        }\n\n        adjustPagingBarSize(root);\n    };\n\n    return {\n        init: init,\n        disableNextControlButtons: disableNextControlButtons,\n        enableNextControlButtons: enableNextControlButtons,\n        disablePreviousControlButtons: disablePreviousControlButtons,\n        enablePreviousControlButtons: enablePreviousControlButtons,\n        showPage: showPage,\n        rootSelector: SELECTORS.ROOT,\n    };\n});\n"],"file":"paged_content_paging_bar.min.js"}