{"version":3,"sources":["../src/tool_type.js"],"names":["define","ajax","notification","query","args","promise","call","methodname","fail","exception","create","update","id","getFromToolProxyId","toolproxyid","isCartridge","url","constants","state","configured","pending","rejected"],"mappings":"AAyBAA,OAAM,qBAAC,CAAC,WAAD,CAAc,mBAAd,CAAD,CAAqC,SAASC,CAAT,CAAeC,CAAf,CAA6B,CACpE,MAA8C,CAa1CC,KAAK,CAAE,eAASC,CAAT,CAAe,IAMdC,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,wBADF,CAEVH,IAAI,CAAEA,CAAI,EAAI,EAFJ,CAKU,CAAV,EAAqB,CAArB,CANI,CAQlBC,CAAO,CAACG,IAAR,CAAaN,CAAY,CAACO,SAA1B,EAEA,MAAOJ,CAAAA,CACV,CAxByC,CAuC1CK,MAAM,CAAE,gBAASN,CAAT,CAAe,IAMfC,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,0BADF,CAEVH,IAAI,CAAEA,CAFI,CAKU,CAAV,EAAqB,CAArB,CANK,CAQnB,MAAOC,CAAAA,CACV,CAhDyC,CA6D1CM,MAAM,CAAE,gBAASP,CAAT,CAAe,IAMfC,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,0BADF,CAEVH,IAAI,CAAEA,CAFI,CAKU,CAAV,EAAqB,CAArB,CANK,CAQnBC,CAAO,CAACG,IAAR,CAAaN,CAAY,CAACO,SAA1B,EAEA,MAAOJ,CAAAA,CACV,CAxEyC,CAkF1C,OAAU,iBAASO,CAAT,CAAa,IAQfP,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CAPV,CACVC,UAAU,CAAE,0BADF,CAEVH,IAAI,CAAE,CACFQ,EAAE,CAAEA,CADF,CAFI,CAOU,CAAV,EAAqB,CAArB,CARK,CAUnBP,CAAO,CAACG,IAAR,CAAaN,CAAY,CAACO,SAA1B,EAEA,MAAOJ,CAAAA,CACV,CA/FyC,CA0G1CQ,kBAAkB,CAAE,4BAASD,CAAT,CAAa,CAC7B,MAAO,MAAKT,KAAL,CAAW,CAACW,WAAW,CAAEF,CAAd,CAAX,CACV,CA5GyC,CAwH1CG,WAAW,CAAE,qBAASC,CAAT,CAAc,IAQnBX,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CAPV,CACVC,UAAU,CAAE,sBADF,CAEVH,IAAI,CAAE,CACFY,GAAG,CAAEA,CADH,CAFI,CAOU,CAAV,EAAqB,CAArB,CARS,CAUvB,MAAOX,CAAAA,CACV,CAnIyC,CAwI1CY,SAAS,CAAE,CACPC,KAAK,CAAE,CACHC,UAAU,CAAE,CADT,CAEHC,OAAO,CAAE,CAFN,CAGHC,QAAQ,CAAE,CAHP,CADA,CAxI+B,CAgJjD,CAjJK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides an interface for a tool type in the Moodle server.\n *\n * @module     mod_lti/tool_type\n * @class      tool_type\n * @package    mod_lti\n * @copyright  2015 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['core/ajax', 'core/notification'], function(ajax, notification) {\n    return /** @alias module:mod_lti/tool_type */ {\n        /**\n         * Get a list of tool types from Moodle for the given\n         * search args.\n         *\n         * See also:\n         * mod/lti/classes/external.php get_tool_types_parameters()\n         *\n         * @method query\n         * @public\n         * @param {Object} args Search parameters\n         * @return {Promise} jQuery Deferred object\n         */\n        query: function(args) {\n            var request = {\n                methodname: 'mod_lti_get_tool_types',\n                args: args || {}\n            };\n\n            var promise = ajax.call([request])[0];\n\n            promise.fail(notification.exception);\n\n            return promise;\n        },\n\n        /**\n         * Create a tool type in Moodle.\n         *\n         * The promise will fail if the URL is not a cartridge, so you must handle the fail result.\n         *\n         * See also:\n         * mod/lti/classes/external.php create_tool_type_parameters()\n         *\n         * @method create\n         * @public\n         * @param {Object} args Tool type properties\n         * @return {Promise} jQuery Deferred object\n         */\n        create: function(args) {\n            var request = {\n                methodname: 'mod_lti_create_tool_type',\n                args: args\n            };\n\n            var promise = ajax.call([request])[0];\n\n            return promise;\n        },\n\n        /**\n         * Update a tool type in Moodle.\n         *\n         * See also:\n         * mod/lti/classes/external.php update_tool_type_parameters()\n         *\n         * @method update\n         * @public\n         * @param {Object} args Tool type properties\n         * @return {Promise} jQuery Deferred object\n         */\n        update: function(args) {\n            var request = {\n                methodname: 'mod_lti_update_tool_type',\n                args: args\n            };\n\n            var promise = ajax.call([request])[0];\n\n            promise.fail(notification.exception);\n\n            return promise;\n        },\n\n        /**\n         * Delete a tool type from Moodle.\n         *\n         * @method delete\n         * @public\n         * @param {Integer} id Tool type ID\n         * @return {Promise} jQuery Deferred object\n         */\n        'delete': function(id) {\n            var request = {\n                methodname: 'mod_lti_delete_tool_type',\n                args: {\n                    id: id\n                }\n            };\n\n            var promise = ajax.call([request])[0];\n\n            promise.fail(notification.exception);\n\n            return promise;\n        },\n\n        /**\n         * Get a list of tool types from Moodle for the given\n         * tool proxy id.\n         *\n         * @method query\n         * @public\n         * @param {Integer} id Tool type ID\n         * @return {Promise} jQuery Deferred object\n         */\n        getFromToolProxyId: function(id) {\n            return this.query({toolproxyid: id});\n        },\n\n        /**\n         * Check if the given URL is a cartridge URL.\n         *\n         * The promise will fail if the URL is unreachable, so you must handle the fail result.\n         *\n         * @method isCartridge\n         * @public\n         * @param {String} url\n         * @return {Promise} jQuery Deferred object\n         */\n        isCartridge: function(url) {\n            var request = {\n                methodname: 'mod_lti_is_cartridge',\n                args: {\n                    url: url\n                }\n            };\n\n            var promise = ajax.call([request])[0];\n\n            return promise;\n        },\n\n        /**\n         * Tool type constants.\n         */\n        constants: {\n            state: {\n                configured: 1,\n                pending: 2,\n                rejected: 3\n            },\n        }\n    };\n});\n"],"file":"tool_type.min.js"}