{"version":3,"sources":["../src/edit_tags.js"],"names":["define","$","Fragment","Str","ModalEvents","ModalFactory","Notification","CustomEvents","Repository","QuestionSelectors","enableSaveButton","root","find","actions","save","prop","disableSaveButton","getFormData","modal","getBody","serialize","startLoading","loadingIconContainer","containers","loadingIcon","removeClass","stopLoading","addClass","setContextId","contextId","attr","getContextId","data","setQuestionId","questionId","getQuestionId","registerEventListeners","modalPromise","create","type","types","SAVE_CANCEL","large","edittags","then","get_string","string","setTitle","fail","exception","getRoot","on","e","form","submit","preventDefault","hide","location","reload","stopPropagation","events","activate","currentTarget","canTag","tagsFragment","loadFragment","id","setBody","always","show","formData","submitTagCreateUpdateForm","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle question tags editing.\n *\n * @module     core_question/edit_tags\n * @copyright  2018 Simey Lameze <simey@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n            'jquery',\n            'core/fragment',\n            'core/str',\n            'core/modal_events',\n            'core/modal_factory',\n            'core/notification',\n            'core/custom_interaction_events',\n            'core_question/repository',\n            'core_question/selectors',\n        ],\n        function(\n            $,\n            Fragment,\n            Str,\n            ModalEvents,\n            ModalFactory,\n            Notification,\n            CustomEvents,\n            Repository,\n            QuestionSelectors\n        ) {\n\n    /**\n     * Enable the save button in the footer.\n     *\n     * @param {object} root The container element.\n     * @method enableSaveButton\n     */\n    var enableSaveButton = function(root) {\n        root.find(QuestionSelectors.actions.save).prop('disabled', false);\n    };\n\n    /**\n     * Disable the save button in the footer.\n     *\n     * @param {object} root The container element.\n     * @method disableSaveButton\n     */\n    var disableSaveButton = function(root) {\n        root.find(QuestionSelectors.actions.save).prop('disabled', true);\n    };\n\n    /**\n     * Get the serialised form data.\n     *\n     * @method getFormData\n     * @param {object} modal The modal object.\n     * @return {string} serialised form data\n     */\n    var getFormData = function(modal) {\n        return modal.getBody().find('form').serialize();\n    };\n\n    /**\n     * Set the element state to loading.\n     *\n     * @param {object} root The container element\n     * @method startLoading\n     */\n    var startLoading = function(root) {\n        var loadingIconContainer = root.find(QuestionSelectors.containers.loadingIcon);\n\n        loadingIconContainer.removeClass('hidden');\n    };\n\n    /**\n     * Remove the loading state from the element.\n     *\n     * @param {object} root The container element\n     * @method stopLoading\n     */\n    var stopLoading = function(root) {\n        var loadingIconContainer = root.find(QuestionSelectors.containers.loadingIcon);\n\n        loadingIconContainer.addClass('hidden');\n    };\n\n    /**\n     * Set the context Id data attribute on the modal.\n     *\n     * @param {Promise} modal The modal promise.\n     * @param {int} contextId The context id.\n     */\n    var setContextId = function(modal, contextId) {\n        modal.getBody().attr('data-contextid', contextId);\n    };\n\n    /**\n     * Get the context Id data attribute value from the modal body.\n     *\n     * @param {Promise} modal The modal promise.\n     * @return {int} The context id.\n     */\n    var getContextId = function(modal) {\n        return modal.getBody().data('contextid');\n    };\n\n    /**\n     * Set the question Id data attribute on the modal.\n     *\n     * @param {Promise} modal The modal promise.\n     * @param {int} questionId The question Id.\n     */\n    var setQuestionId = function(modal, questionId) {\n        modal.getBody().attr('data-questionid', questionId);\n    };\n\n    /**\n     * Get the question Id data attribute value from the modal body.\n     *\n     * @param {Promise} modal The modal promise.\n     * @return {int} The question Id.\n     */\n    var getQuestionId = function(modal) {\n        return modal.getBody().data('questionid');\n    };\n\n    /**\n     * Register event listeners for the module.\n     *\n     * @param {object} root The calendar root element\n     */\n    var registerEventListeners = function(root) {\n        var modalPromise = ModalFactory.create(\n            {\n                type: ModalFactory.types.SAVE_CANCEL,\n                large: false\n            },\n            [root, QuestionSelectors.actions.edittags]\n        ).then(function(modal) {\n            // All of this code only executes once, when the modal is\n            // first created. This allows us to add any code that should\n            // only be run once, such as adding event handlers to the modal.\n            Str.get_string('questiontags', 'question')\n                .then(function(string) {\n                    modal.setTitle(string);\n                    return string;\n                })\n                .fail(Notification.exception);\n\n            modal.getRoot().on(ModalEvents.save, function(e) {\n                var form = modal.getBody().find('form');\n                form.submit();\n                e.preventDefault();\n            });\n\n            modal.getRoot().on('submit', 'form', function(e) {\n                save(modal, root).then(function() {\n                    modal.hide();\n                    location.reload();\n                    return;\n                }).fail(Notification.exception);\n\n                // Stop the form from actually submitting and prevent it's\n                // propagation because we have already handled the event.\n                e.preventDefault();\n                e.stopPropagation();\n            });\n\n            return modal;\n        });\n\n        // We need to add an event handler to the tags link because there are\n        // multiple links on the page and without adding a listener we don't know\n        // which one the user clicked on the show the modal.\n        root.on(CustomEvents.events.activate, QuestionSelectors.actions.edittags, function(e) {\n            var currentTarget = $(e.currentTarget);\n\n            var questionId = currentTarget.data('questionid'),\n                canTag = !!currentTarget.data('cantag'),\n                contextId = currentTarget.data('contextid');\n\n            // This code gets called each time the user clicks the tag link\n            // so we can use it to reload the contents of the tag modal.\n            modalPromise.then(function(modal) {\n                // Display spinner and disable save button.\n                disableSaveButton(root);\n                startLoading(root);\n\n                var args = {\n                    id: questionId\n                };\n\n                var tagsFragment = Fragment.loadFragment('question', 'tags_form', contextId, args);\n                modal.setBody(tagsFragment);\n\n                tagsFragment.then(function() {\n                        enableSaveButton(root);\n                        return;\n                    })\n                    .always(function() {\n                        // Always hide the loading spinner when the request\n                        // has completed.\n                        stopLoading(root);\n                        return;\n                    })\n                .fail(Notification.exception);\n\n                // Show or hide the save button depending on whether the user\n                // has the capability to edit the tags.\n                if (canTag) {\n                    modal.getRoot().find(QuestionSelectors.actions.save).show();\n                } else {\n                    modal.getRoot().find(QuestionSelectors.actions.save).hide();\n                }\n\n                setQuestionId(modal, questionId);\n                setContextId(modal, contextId);\n\n                return modal;\n            }).fail(Notification.exception);\n\n            e.preventDefault();\n        });\n    };\n\n    /**\n     * Send the form data to the server to save question tags.\n     *\n     * @method save\n     * @param {object} modal The modal object.\n     * @param {object} root The container element.\n     * @return {object} A promise\n     */\n    var save = function(modal, root) {\n        // Display spinner and disable save button.\n        disableSaveButton(root);\n        startLoading(root);\n\n        var formData = getFormData(modal);\n        var questionId = getQuestionId(modal);\n        var contextId = getContextId(modal);\n\n        // Send the form data to the server for processing.\n        return Repository.submitTagCreateUpdateForm(questionId, contextId, formData)\n            .always(function() {\n                // Regardless of success or error we should always stop\n                // the loading icon and re-enable the buttons.\n                stopLoading(root);\n                enableSaveButton(root);\n                return;\n            })\n            .fail(Notification.exception);\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            registerEventListeners(root);\n        }\n    };\n});\n"],"file":"edit_tags.min.js"}