{"version":3,"sources":["../src/view_manager.js"],"names":["registerEventListeners","root","on","CalendarSelectors","links","eventLink","e","target","eventId","pendingPromise","Pending","matches","actions","viewEvent","closest","dataset","querySelector","preventDefault","stopPropagation","renderEventSummaryModal","then","resolve","catch","navLink","wrapper","find","view","data","courseId","categoryId","link","currentTarget","changeMonth","href","year","month","day","changeDay","viewSelector","CustomEvents","define","events","activate","option","classList","contains","courseid","categoryid","refreshMonthContent","window","history","pushState","fail","Notification","exception","refreshDayContent","reloadCurrentUpcoming","template","startLoading","attr","M","util","js_pending","get","join","includenavigation","mini","CalendarRepository","getCalendarMonthData","context","viewingmonth","Templates","render","html","js","replaceNode","document","dispatchEvent","CustomEvent","CalendarEvents","viewUpdated","always","js_complete","stopLoading","url","length","args","trigger","monthChanged","reloadCurrentMonth","getCalendarDayData","viewingday","reloadCurrentDay","dayChanged","loadingIconContainer","containers","loadingIcon","removeClass","addClass","getCalendarUpcomingData","viewingupcoming","getEventTypeClassFromType","eventType","getEventById","getEventResponse","event","Error","eventData","modalParams","title","name","type","SummaryModal","TYPE","body","templateContext","canedit","candelete","headerclasses","normalisedeventtype","isactionevent","action","ModalFactory","create","modal","getRoot","ModalEvents","hidden","destroy","show","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     core_calendar/view_manager\n * @package    core_calendar\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport CalendarEvents from 'core_calendar/events';\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport SummaryModal from 'core_calendar/summary_modal';\nimport CustomEvents from 'core/custom_interaction_events';\nimport Pending from 'core/pending';\n\n/**\n * Register event listeners for the module.\n *\n * @param {object} root The root element.\n */\nconst registerEventListeners = (root) => {\n    root = $(root);\n\n    // Bind click events to event links.\n    root.on('click', CalendarSelectors.links.eventLink, (e) => {\n        const target = e.target;\n        let eventLink = null;\n        let eventId = null;\n        const pendingPromise = new Pending('core_calendar/view_manager:eventLink:click');\n\n        if (target.matches(CalendarSelectors.actions.viewEvent)) {\n            eventLink = target;\n        } else {\n            eventLink = target.closest(CalendarSelectors.actions.viewEvent);\n        }\n\n        if (eventLink) {\n            eventId = eventLink.dataset.eventId;\n        } else {\n            eventId = target.querySelector(CalendarSelectors.actions.viewEvent).dataset.eventId;\n        }\n\n        if (eventId) {\n            // A link was found. Show the modal.\n\n            e.preventDefault();\n            // We've handled the event so stop it from bubbling\n            // and causing the day click handler to fire.\n            e.stopPropagation();\n\n            renderEventSummaryModal(eventId)\n            .then(pendingPromise.resolve)\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    });\n\n    root.on('click', CalendarSelectors.links.navLink, (e) => {\n        const wrapper = root.find(CalendarSelectors.wrapper);\n        const view = wrapper.data('view');\n        const courseId = wrapper.data('courseid');\n        const categoryId = wrapper.data('categoryid');\n        const link = e.currentTarget;\n\n        if (view === 'month') {\n            changeMonth(root, link.href, link.dataset.year, link.dataset.month, courseId, categoryId, link.dataset.day);\n            e.preventDefault();\n        } else if (view === 'day') {\n            changeDay(root, link.href, link.dataset.year, link.dataset.month, link.dataset.day, courseId, categoryId);\n            e.preventDefault();\n        }\n    });\n\n    const viewSelector = root.find(CalendarSelectors.viewSelector);\n    CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n    viewSelector.on(\n        CustomEvents.events.activate,\n        (e) => {\n            e.preventDefault();\n\n            const option = e.target;\n            if (option.classList.contains('active')) {\n                return;\n            }\n\n            const view = option.dataset.view,\n                year = option.dataset.year,\n                month = option.dataset.month,\n                day = option.dataset.day,\n                courseId = option.dataset.courseid,\n                categoryId = option.dataset.categoryid;\n\n            if (view == 'month') {\n                refreshMonthContent(root, year, month, courseId, categoryId, root, 'core_calendar/calendar_month', day)\n                    .then(() => {\n                        return window.history.pushState({}, '', '?view=month');\n                    }).fail(Notification.exception);\n            } else if (view == 'day') {\n                refreshDayContent(root, year, month, day, courseId, categoryId, root, 'core_calendar/calendar_day')\n                    .then(() => {\n                        return window.history.pushState({}, '', '?view=day');\n                    }).fail(Notification.exception);\n            } else if (view == 'upcoming') {\n                reloadCurrentUpcoming(root, courseId, categoryId, root, 'core_calendar/calendar_upcoming')\n                    .then(() => {\n                        return window.history.pushState({}, '', '?view=upcoming');\n                    }).fail(Notification.exception);\n            }\n        }\n    );\n};\n\n/**\n * Refresh the month content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const refreshMonthContent = (root, year, month, courseId, categoryId, target = null, template = '', day = 1) => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, courseId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    const mini = root.data('mini');\n    return CalendarRepository.getCalendarMonthData(year, month, courseId, categoryId, includenavigation, mini, day)\n        .then(context => {\n            context.viewingmonth = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The container element\n * @param {string} url The calendar url to be shown\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const changeMonth = (root, url, year, month, courseId, categoryId, day = 1) => {\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                window.history.pushState({}, '', url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.monthChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentMonth = (root, courseId = 0, categoryId = 0) => {\n    const year = root.find(CalendarSelectors.wrapper).data('year');\n    const month = root.find(CalendarSelectors.wrapper).data('month');\n    const day = root.find(CalendarSelectors.wrapper).data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day);\n};\n\n\n/**\n * Refresh the day content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} day Day\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n *\n * @return {promise}\n */\nexport const refreshDayContent = (root, year, month, day, courseId, categoryId, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    return CalendarRepository.getCalendarDayData(year, month, day, courseId, categoryId, includenavigation)\n        .then((context) => {\n            context.viewingday = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Reload the current day view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentDay = (root, courseId = 0, categoryId = 0) => {\n    const wrapper = root.find(CalendarSelectors.wrapper);\n    const year = wrapper.data('year');\n    const month = wrapper.data('month');\n    const day = wrapper.data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshDayContent(root, year, month, day, courseId, categoryId);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The root element.\n * @param {String} url The calendar url to be shown\n * @param {Number} year Year\n * @param {Number} month Month\n * @param {Number} day Day\n * @param {Number} courseId The id of the course whose events are shown\n * @param {Number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const changeDay = (root, url, year, month, day, courseId, categoryId) => {\n    return refreshDayContent(root, year, month, day, courseId, categoryId)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                window.history.pushState({}, '', url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.dayChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\nconst startLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.removeClass('hidden');\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nconst stopLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.addClass('hidden');\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\nexport const reloadCurrentUpcoming = (root, courseId = 0, categoryId = 0, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return CalendarRepository.getCalendarUpcomingData(courseId, categoryId)\n        .then((context) => {\n            context.viewingupcoming = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(function() {\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Get the CSS class to apply for the given event type.\n *\n * @param {string} eventType The calendar event type\n * @return {string}\n */\nconst getEventTypeClassFromType = (eventType) => {\n    return 'calendar_event_' + eventType;\n};\n\n/**\n * Render the event summary modal.\n *\n * @param {Number} eventId The calendar event id.\n * @returns {Promise}\n */\nconst renderEventSummaryModal = (eventId) => {\n    const pendingPromise = new Pending('core_calendar/view_manager:renderEventSummaryModal');\n\n    // Calendar repository promise.\n    return CalendarRepository.getEventById(eventId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.event) {\n            throw new Error('Error encountered while trying to fetch calendar event with ID: ' + eventId);\n        }\n\n        return getEventResponse.event;\n    })\n    .then(eventData => {\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: eventData.name,\n            type: SummaryModal.TYPE,\n            body: Templates.render('core_calendar/event_summary_body', eventData),\n            templateContext: {\n                canedit: eventData.canedit,\n                candelete: eventData.candelete,\n                headerclasses: getEventTypeClassFromType(eventData.normalisedeventtype),\n                isactionevent: eventData.isactionevent,\n                url: eventData.url,\n                action: eventData.action\n            }\n        };\n\n        // Create the modal.\n        return ModalFactory.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\nexport const init = (root, view) => {\n    registerEventListeners(root, view);\n};\n"],"file":"view_manager.min.js"}